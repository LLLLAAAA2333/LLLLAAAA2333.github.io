---
import type { Post } from '~/types'
import { formatDate } from '~/utils'
import PostCategory from './PostCategory.astro'

interface Props {
  post: Post
}

const { post } = Astro.props
const { translate: t } = Astro.locals

const categoryList = post.data.categories ?? []
const tagList = post.data.tags ?? []
---

<header flex="~ col gap-2">
  <h1 class="post-title">
    <a class="not-prose" href={`/posts/${post.id}/`}>{post.data.title}</a>
  </h1>
  <div class="text-3.5 flex flex-wrap items-center gap-x-2">
    <span>{t(post.data.modDate ? 'updated_at' : 'posted_at')}</span>
    <time>{formatDate(post.data.modDate ?? post.data.pubDate)}</time>
    {categoryList.map((category) => <PostCategory category={category} />)}

    {tagList.length > 0 && <span class="text-gray-400">â€¢</span>}
    {tagList.map((tag, index) => (
      <a href={`/tags/${tag}`} class="text-sm">
        #{tag}
      </a>
    ))}
    </div>
</header>